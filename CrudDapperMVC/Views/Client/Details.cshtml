@model CrudDapperMVC.Model.Client

@{
    ViewBag.Title = "Details";
}

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name) :
            @Html.DisplayFor(model => model.Name)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.CPF) :
            @Html.DisplayFor(model => model.CPF)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.Email) :
            @Html.DisplayFor(model => model.Email)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.Phone) :
            @Html.DisplayFor(model => model.Phone)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.Active) :
            @Html.DisplayFor(model => model.Active)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.ZipCode) :
            @Html.DisplayFor(model => model.ZipCode)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.Street) :
            @Html.DisplayFor(model => model.Street)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.Number) :
            @Html.DisplayFor(model => model.Number)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.AddressComplement) :
            @Html.DisplayFor(model => model.AddressComplement)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.City) :
            @Html.DisplayFor(model => model.City)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.Neighborhood) :
            @Html.DisplayFor(model => model.Neighborhood)
        </dt>
        <dt>
            @Html.DisplayNameFor(model => model.State) :
            @Html.DisplayFor(model => model.State)
        </dt>
    </dl>
</div>
<p>
    @Html.ActionLink("Voltar à lista", "Index", null, null, new { @class = "btn btn-warning" })
    @Html.ActionLink("Editar", "Edit", new { id = Model.Id }, new { @class = "btn btn-success" })
</p>
